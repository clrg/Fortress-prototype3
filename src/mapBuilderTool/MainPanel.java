package mapBuilderTool;

import gameCore.Building;
import gameCore.GameData;
import gameCore.Map;
import gameCore.MapObject;
import gameCore.Tile;
import gameCore.Unit;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JPanel;
import javax.swing.Timer;

public class MainPanel extends JPanel implements MouseListener
{
	// this line was generated by eclipse dunno why.
	private static final long serialVersionUID = 1L;
	
	// Variables
	private boolean gridview = true;
	private boolean coordinates = true;
	
	// Objects
	public Map currentMap;
	
	// Constructor
	public MainPanel(boolean gridview, boolean coordinates)
	{
		this.gridview = gridview;
		this.coordinates = coordinates;
		super.setLayout(null); // Do this always or the components get a default location
		addMouseListener(this);
		
		// Create a custom JPanel for the controls
		NewObjectPanel newObjectPanel = new NewObjectPanel(this);
		super.add(newObjectPanel);
		
		// This should make everything repaint all the time.  
		Timer refreshTimer = new Timer(50, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                repaint();
            }
        });
        refreshTimer.start();
	}
	
	public void paintComponent(Graphics g) 
	{
		super.paintComponent(g);       
		
		// The background
		g.setColor(Color.BLACK);
	    g.fillRect(0,0,800,600);
	    
	    if (currentMap != null) // Check if there is a map to load
	    {
			currentMap.repaint(g);
	    }
	}
	
	
	// Some getters and setters, I stopped using them halfway because they take too much space.
	// And it's easier to just make things public, and I don't think we'll be having much security issues.
	public boolean getGridView()
	{
		return gridview;
	}
	public void setGridView(boolean value)
	{
		gridview = value;
		currentMap.gridview = value;
	}
	public void setCoordinates(boolean coordinates) {
		this.coordinates = coordinates;
		currentMap.coordinates = coordinates;
	}
	public boolean getCoordinates() {
		return coordinates;
	}

	// Mouse events
	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseReleased(MouseEvent click) 
	{
		if(currentMap != null)
		{
			currentMap.click(new Point(click.getX(),click.getY()), click.getButton());
		}
	}
}
